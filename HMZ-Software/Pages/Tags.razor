@page "/Blog/Tags"
@page "/Blog/Tags/{Tag}"
@using HMZSoftwareBlazorWebAssembly.Models
@using HMZSoftwareBlazorWebAssembly.Services

@if (IsDataLoading)
{
    <i class="las la-circle-notch la-3x m-auto"></i>
}
else
{
    <div class="wide-wrapper wide-wrapper--column">
        @foreach (var item in TagsData)
        {
            <div class="tag-sec" id="@item">
                <h2 class="title">
                    @item
                </h2>
                <div class="flex-column">
                    @foreach (var post in Metadata)
                    {
                        if (post.Tags.Contains(item))
                        {
                            <article class="post">
                                <a data-exclude="true" href="/Blog/Post/@post.Url">
                                    <div class="title">
                                        @post.Title
                                    </div>
                                    <div class="description">
                                        @post.Description
                                    </div>
                                </a>
                            </article>
                        }
                    }
                </div>
            </div>
        }
    </div>
}

@code {

    [Parameter]
    public string Tag { get; set; }

    [Inject] private IBlogPostProcessorService BlogPostProcessorService { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; }

    private List<YamlMetadata> Metadata { get; set; }
    private List<string> TagsData { get; set; } = new List<string>();
    private bool IsDataLoading { get; set; } = true;

    protected async override Task OnInitializedAsync()
    {
        await JSRuntime.InvokeVoidAsync("BlazorHelpers.SetTitle", "Tags");
        Metadata = await BlogPostProcessorService.ProcessPostsMetadataAsync();
        TagsData = await BlogPostProcessorService.ProcessTagsAsync();

        IsDataLoading = false;
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (!string.IsNullOrWhiteSpace(Tag))
        {
            if (!TagsData.Contains(Tag))
                return;

            await JSRuntime.InvokeVoidAsync("BlazorHelpers.ScrollElementIntoView", Tag);
        }
    }
}
