@inject HttpClient httpClient

<div class="status">
    <div class="links">
        Links
        <div>
            <a href="@ProjectLink" target="_blank"><i class="@LinkIcon"></i></a>
        </div>
    </div>
    @if (HasGitHub)
    {
        <div class="github-status">
            GitHub
            @if (DataLoading)
            {
                <div>
                    <i class="las la-circle-notch"></i>
                </div>
            }
            else if (DataLoading)
            {
                <div>
                    <i class="las la-eye"></i>
                    <i class="las la-star"></i>
                    <i class="las la-code-branch"></i>
                </div>
            }
            else
            {
                <div>
                    <i class="las la-times-circle"></i> Error fetching project stats.
                </div>
            }
        </div>
    }
</div>

@code {

    [Parameter]
    public string ProjectLink { get; set; }

    [Parameter]
    public string LinkIcon { get; set; }

    [Parameter]
    public bool HasGitHub { get; set; }

    [Parameter]
    public bool ProjectName { get; set; }

    private bool DataLoading { get; set; } = true;

    private bool DataReceived { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!Uri.TryCreate(ProjectLink, UriKind.Absolute, out Uri result) && !(result.Scheme == Uri.UriSchemeHttps || result.Scheme == Uri.UriSchemeHttp))
            throw new Exception("Invalid project url!");

        httpClient.BaseAddress = new Uri("https://api.github.com");
        httpClient.DefaultRequestHeaders.Add("Accept", "application/vnd.github.v3+json");

        DataLoading = false;
    }


}
